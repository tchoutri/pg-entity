name: Tests

on:
  pull_request:
  push:
    branches: ["main"]

jobs:                                                                                                                   
  generateMatrix:                                                                                                       
    name: "Generate matrix from cabal"                                                                                  
    runs-on: ubuntu-latest                                                                                              
    outputs:                                                                                                            
      matrix: ${{ steps.set-matrix.outputs.matrix }}                                                                    
    steps:                                                                                                              
      - name: Checkout base repo                                                                                        
        uses: actions/checkout@v4                                                                                       
      - name: Extract the tested GHC versions                                                                           
        id: set-matrix                                                                                                  
        run: |                                                                                                          
          wget https://github.com/Kleidukos/get-tested/releases/download/v0.1.4.0/get-tested-0.1.4.0-linux-amd64 -O get-tested
          chmod +x get-tested                                                                                           
          ./get-tested --ubuntu pg-entity.cabal >> $GITHUB_OUTPUT                                            
  tests:                                                                                                                
    name: ${{ matrix.ghc }} on ${{ matrix.os }}                                                                         
    needs: generateMatrix                                                                                               
    runs-on: ${{ matrix.os }}                                                                                           
    strategy:                                                                                                           
      matrix: ${{ fromJSON(needs.generateMatrix.outputs.matrix) }}
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - name: "Configure ghcup"
      run: |
        ghcup config add-release-channel https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-prereleases-0.0.7.yaml;

    - name: Set up Haskell
      id: setup-haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure environment
      run: |
        sudo apt update -y
        sudo apt install -y postgresql libpq-dev 
        wget https://github.com/rust-lang/mdBook/releases/download/v0.4.30/mdbook-v0.4.30-x86_64-unknown-linux-gnu.tar.gz
        tar -xzvf *.tar.gz
        mkdir "$HOME/.local/bin"
        mv mdbook $HOME/.local/bin/mdbook
        echo "/usr/lib/postgresql/14/bin/" >> $GITHUB_PATH
        echo "$HOME/.ghcup/bin" >> $GITHUB_PATH
        echo "$HOME/.cabal/bin" >> $GITHUB_PATH
        source ./environment.sh
        touch ~/.pgpass
        chmod 0600 ~/.pgpass
        echo "${FLORA_DB_HOST}:${FLORA_DB_PORT}:${FLORA_DB_DATABASE}:${FLORA_DB_USER}:${FLORA_DB_PASSWORD}" > .pgpass
        cabal freeze

    - name: Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        make build
        cabal install postgresql-migration

    - name: Test
      run: |
        source environment.sh
        make test
      env:
        PGPASSWORD: "postgres"
